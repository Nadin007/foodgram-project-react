name: foodgram-workflow
on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      working-directory: backend/recipe_backend
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt

    - name: Test with flake8
      working-directory: backend/recipe_backend
      env:
        SECRET_KEY: ${{secrets.SECRET_KEY}}
      run: |
        python -m flake8

    - name: Test with tests.test_model
      working-directory: backend/recipe_backend
      env:
        SECRET_KEY: ${{secrets.SECRET_KEY}}
        DB_NAME: github_actions
        DB_ENGINE: ${{ secrets.DB_ENGINE }}
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
      run: |
        python manage.py test tests.test_models

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: tumarevanadya/recipe_book:latest

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build_and_push_to_docker_hub
#    steps:
#    - name: executing remote ssh commands to deploy
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USER }}
#        key: ${{ secrets.SSH_KEY }}
#        passphrase: ${{ secrets.PASSPHRASE }}
#        script: |
#          cd foodgam/infra
#          sudo docker pull tumarevanadya/recipe_book
#          sudo docker-compose stop
#          sudo docker-compose rm web
#          touch .env 
#          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
#          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
#          echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
#          sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!